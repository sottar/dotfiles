
# Create a new directory and enter it
function md() {
  mkdir -p "$@" && cd "$@"
}

# Escape UTF-8 characters into their 3-byte format
function escape() {
  printf "\\\x%s" $(printf "$@" | xxd -p -c1 -u)
  echo # newline
}

# Decode \x{ABCD}-style Unicode escape sequences
function unidecode() {
  perl -e "binmode(STDOUT, ':utf8'); print \"$@\""
  echo # newline
}

# git
## The name of the current branch
function current_branch() {
  git rev-parse --abbrev-ref HEAD
}

## The list of remotes
function current_repository() {
  if ! $_omz_git_git_cmd rev-parse --is-inside-work-tree &> /dev/null; then
    return
  fi
  echo $($_omz_git_git_cmd remote -v | cut -d':' -f 2)
}

# vscode
function code() {
  open -a Cursor $*;
}

# open memo in vscode
function memo() {
  echo -e '\e[34;1mpulling latest... \e[m'
  cd ~/workspace/memo
  ggpull
  cd -
  open -a Cursor ~/workspace/memo;
}

function o() {
  if [ "$1" = "" ]; then
    open .
  else
    open "$1"
  fi
}

# npm
function n() {
  echo -e "\e[30;1m> npm $* \e[m"
  npm $*;
}

# npm
function ni() {
  echo -e "\e[30;1m> npm install \e[m"
  npm install;
}

# npm run
function nr() {
  echo -e "\e[30;1m> npm run $* \e[m"
  npm run $*;
}

## fzf
function fzf-select-history() {
    BUFFER=$(history -n -r 1 | fzf --query "$LBUFFER")
    CURSOR=$#BUFFER
    zle reset-prompt
}
zle -N fzf-select-history
bindkey '^r' fzf-select-history
